worker_processes  1;
error_log logs/error.log info;
events {
    worker_connections 1024;
}
http {
 lua_package_path "/home/ubuntu/site/pocollab/pocollab/openresty/lua-resty-jwt-0.1.11/lib/resty/?.lua;;";

 server {
  listen 80;
  server_name pocollab;
  location / {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  Host       $http_host;
    proxy_pass        http://127.0.0.1:4200;
  }
 }

 server {
  listen 8080;
  server_name geth;
  location / {

    set $target '127.0.0.1:';
    set $quorum_port '22000';
    access_by_lua '
	local cjson = require "cjson"
        local jwt = require "resty.jwt"
	local auth_header = ngx.var.http_Authorization
	if auth_header == nil then
        	ngx.log(ngx.WARN, "No Authorization header")
        	ngx.exit(ngx.HTTP_UNAUTHORIZED)
    	end

    	ngx.log(ngx.INFO, "Authorization: " .. auth_header)

    	-- require Bearer token
    	local _, _, token = string.find(auth_header, "Bearer%s+(.+)")

    	if token == nil then
       	 	ngx.log(ngx.WARN, "Missing token")
        	ngx.exit(ngx.HTTP_UNAUTHORIZED)
    	end

	--local jwt_obj = jwt:verify("supersecret", token, 0)

	--if not jwt_obj["verified"] then
 		-- ngx.status = ngx.HTTP_UNAUTHORIZED
  		-- ngx.say(jwt_obj.reason);
   		-- ngx.exit(ngx.HTTP_OK)
	--end

       local h = ngx.req.get_headers()
                for k, v in pairs(h) do
                    --ngx.say(k, ": ", v)
		    if ( k == "x-quorum-port" ) then ngx.var.quorum_port = v; end
                end

        ';

    # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  "*";
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  "*";
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Access-Token, x-quorum-port";
      return 200;
    }

    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  Host       $http_host;
    #proxy_pass        http://127.0.0.1:22000;
    proxy_pass        http://$target$quorum_port;
  }
}

}
